name: pr

on:
  release:
    types: [published]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
  
    - name: Checkout code
      uses: actions/checkout@master
    
    - name: Show Popularity
      id: popular
      run: |
        set -exv
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        GIT_TAGS=$(git tag -l --sort=committerdate)  
        TAGS=($GIT_TAGS)
        echo "${{ toJson(github.sha) }}"
        export COMMIT=rc-${TAGS[0]}-$(jq --raw-output .head_commit.id "${{ github }}" | cut -c1-7)
        export GHASH=$(echo ${{ toJson(github.sha) }} | cut -c1-7)
        echo "Below is the grabbed hash"
        echo $GHASH
        echo "BELOW is the commit"
        echo $COMMIT
        echo "******************************"
        echo "The github context is:"
        echo "${{ toJson(github) }}"
        echo ""
        echo "The job context is:"
        echo "${{ toJson(job) }}"
        echo ""
        echo "The steps context is:"
        echo "${{ toJson(steps) }}"
        echo ""
        echo "The runner context is:"
        echo "${{ toJson(runner) }}"
        echo ""
        echo "The strategy context is:"
        echo "${{ toJson(strategy) }}"
        echo ""
        echo "The matrix context is:"
        echo "${{ toJson(matrix) }}"

  exitis:
    if: "!github.event.release.prerelease"
    runs-on: [ubuntu-latest]
    steps:
      - name: step1 
        run: |
          echo "chill pill"
          
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: main
        
    - name: get tag
      run: |
        set -exv
        export GG="${GITHUB_REF/refs\/tags\/}"
        echo $GG
        
    - uses: actions/checkout@v2
      with:
        repository: iamtito/bvify
        path: 'bvify'

    - name: Deploy
      run: |
        set -exv
        export GITHUB_TAG="${GITHUB_REF/refs\/tags\/}"
        echo $GITHUB_TAG
        
  ploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        path: main
    - name: get tag
      run: |
        set -exv
        export GG="${GITHUB_REF/refs\/tags\/}"
        echo $GG
        
  loy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        repository: iamtito/bvify
        path: 'bvify'

    - name: Deploy
      run: |
        set -exv
        export GITHUB_TAG="${GITHUB_REF/refs\/tags\/}"
        echo $GITHUB_TAG
        
  record:
    runs-on: ubuntu-latest
    steps:
      - uses: gliech/create-github-secret-action@v1
        continue-on-error: true
        with:
          location: iamtito/react-app
          name: BROADCAST_FREQUENCY
          value: 'Lorem ipsun dolor simit'
          pa_token: ${{ secrets.GIT_TOKEN }}
          
      - uses: hmanzur/actions-set-secret@v2.0.1
        continue-on-error: true
        with:
          name: 'THE_VERSION'
          value: 'Lorem ipsun dolor simit'
          repository: iamtito/react-app
          token: ${{ secrets.GIT_TOKEN }}
          
      - run: echo "${{ secrets.THE_VERSION }} - ${{ secrets.BROADCAST_FREQUENCY }}"
        
  rec:
    runs-on: ubuntu-latest
    steps:
      - uses: gliech/create-github-secret-action@v1
        continue-on-error: true
        with:
          location: iamtito/react-app
          name: BROADCAST
          value: ${GITHUB_REF/refs\/tags\/}
          pa_token: ${{ secrets.GIT_TOKEN }}
          
      - uses: hmanzur/actions-set-secret@v2.0.1
        continue-on-error: true
        with:
          name: 'THE_VERSIONN'
          value: ${GITHUB_REF/refs\/tags\/}
          repository: iamtito/react-app
          token: ${{ secrets.GIT_TOKEN }}
          
      - run: echo "${{ secrets.THE_VERSIONN }} - ${{ secrets.BROADCAST }}"
        
  release:
    runs-on: ubuntu-latest
    outputs:
      githash: ${{ steps.githash.outputs.githash }}
    steps:
      - name: set githash
        run: echo "::set-output name=githash::${GITHUB_REF/refs\/tags\/}"
        id: githash
        
      - uses: gliech/create-github-secret-action@v1
        continue-on-error: true
        with:
          location: iamtito/react-app
          name: BROAD
          value: ${{ steps.githas.outputs.githash }}
          pa_token: ${{ secrets.GIT_TOKEN }}

      - uses: hmanzur/actions-set-secret@v2.0.1
        continue-on-error: true
        with:
          name: 'VERSIONN'
          value: '${{ steps.githas.outputs.githash }}'
          repository: iamtito/react-app
          token: ${{ secrets.GIT_TOKEN }}
          
      - run: echo "${{ secrets.VERSIONN }} - ${{ secrets.BROAD }}"
