#########################################################################################################

##
#########################################################################################################
name: Deploy Terraform

on:
  pull_request:
    types: 
      - opened

jobs:

  new-infra:
    env:
      TF_VERSION: 0.12.24
      TF_WORKING_DIR: deployments/terraform/
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_SECRET }}

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployments/terraform/
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - run: ls
      - name: Check for proper format and style
        id: fmt
        run: terraform fmt
        continue-on-error: true
      - name: Initialize the runbook
        id: init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: validates runbook configuration
        id: validate
        run: terraform validate -no-color

      - name: Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          FMT: ${{ steps.fmt.outcome }}
          INIT: ${{ steps.init.outcome }}
          VALIDATION: ${{ steps.validate.outputs.stdout }}
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `${{ github.workflow }}
            ----
            #### Runbook Format and Style üñå\`${{ env.FMT }}\`
            #### Runbook Initialization ‚öôÔ∏è\`${{ env.INIT }}\`
            #### Runbook Validation ü§ñ${{ env.VALIDATION }}
            #### Runbook Plan üìñ\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show ${{ github.workflow }} Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.TF_WORKING_DIR }}\`, Workflow: \`${{ github.workflow }}\`*`;
             
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Apply
        if: github.event.client_payload.terraform == 'apply'
        id: apply
        run: terraform apply -auto-approve -no-color
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Destroy
      #   if: github.event.client_payload.terraform == 'destroy'
      #   id: apply
      #   run: terraform destroy -auto-approve -no-color
      #   env:
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
